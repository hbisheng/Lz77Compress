# Generated by "$MAXCOMPILERDIR/lib/MaxIDE/projectAdmin.jar" (03-Dec-2014 17:35:02).

ifndef RUNRULE
  $(error The RUNRULE environment variable is not set. Usage: 'make RUNRULE="<RunRule>"')
endif

RUNRULE_DIR= ../RunRules/$(RUNRULE)
include $(RUNRULE_DIR)/Makefile.settings
include Makefile.files.include 

# The list of source files to compile may be overridden here.
SRCS    := $(SOURCES)

all: build

ifdef TARGET_EXEC
all: build
build: $(RUNRULE_DIR)/binaries/$(TARGET_EXEC)
run: build
	env $(RUNRULE_RUNENV) $(RUNRULE_DIR)/binaries/$(TARGET_EXEC) $(RUNRULE_ARGS) $(EXTRAARGS)
endif

ifdef TARGET_LIBRARY
all: build
build: $(RUNRULE_DIR)/binaries/$(TARGET_LIBRARY)
run:
	$(error Target "run" is not defined for a library build)
endif

ifdef TARGET_SKIN
all:
	$(error This Makefile may not be used for a skin build)
endif

ifndef DEBUG
 O_FLAGS = -g -O3
else
 O_FLAGS = -g -O0
endif

CFLAGS    = -std=gnu99 $(O_FLAGS) -Wall -Wextra -I$(RUNRULE_DIR)/include $(shell slic-config --cflags) $(RUNRULE_CFLAGS)
CXXFLAGS  = -Wall -Wextra $(O_FLAGS) -I$(RUNRULE_DIR)/include $(shell slic-config --cflags) $(RUNRULE_CFLAGS)
LDFLAGS   = $(O_FLAGS) $(shell slic-config --libs) $(RUNRULE_LDFLAGS)

#   Add other user-defined extensions here, e.g. --
#CFLAGS    += -I/my/header/files

MAXFILES      = $(patsubst %.max,$(RUNRULE_DIR)/maxfiles/%.max, $(RUNRULE_MAXFILES))
MAXFILES_OBJ  = $(patsubst %.max,$(RUNRULE_DIR)/objects/maxfiles/slic_%.o, $(RUNRULE_MAXFILES))
MAXFILES_INC  = $(patsubst %.max,$(RUNRULE_DIR)/include/%.h, $(RUNRULE_MAXFILES_H))

C_SRC     = $(filter %.c,$(SRCS))
C_OBJ     = $(patsubst %.c,$(RUNRULE_DIR)/objects/c/%.o, $(C_SRC)) 
CPP_SRC   = $(filter %.cpp,$(SRCS))
CPP_OBJ   = $(patsubst %.cpp,$(RUNRULE_DIR)/objects/cpp/%.o, $(CPP_SRC)) 
OBJ       = $(MAXFILES_OBJ) $(C_OBJ) $(CPP_OBJ)

ifdef USE_MAXGENFD
 MAXFILES_OBJ += $(patsubst %.max,$(RUNRULE_DIR)/objects/maxfiles/maxgenfd_%.o, $(RUNRULE_MAXFILES))
 CFLAGS       += $(shell maxgenfd-config --cflags)
 CXXFLAGS     += $(shell maxgenfd-config --cflags)
 LDFLAGS      += $(shell maxgenfd-config --libs)
endif

ifneq ("$(strip $(CPP_SRC))","")
 CC      = $(CXX)
 CFLAGS  = $(CXXFLAGS)
endif

$(RUNRULE_DIR)/objects/c/%.d: %.c  
	@mkdir -p $(dir $@)
	set -e; $(RM) $@ ;                                                             \
	  $(CC) -M $(CFLAGS) -Wno-error $< > $@.$$$$ ;                                 \
      sed 's,\($*\)\.o[ :]*,$(RUNRULE_DIR)/objects/c/\1.o $@ : ,g' < $@.$$$$ > $@; \
      $(RM) $@.$$$$

$(RUNRULE_DIR)/objects/cpp/%.d: %.cpp
	@mkdir -p $(dir $@)
	set -e; $(RM) $@ ;                                                               \
	  $(CXX) -M $(CXXFLAGS) -Wno-error $< > $@.$$$$ ;                                \
      sed 's,\($*\)\.o[ :]*,$(RUNRULE_DIR)/objects/cpp/\1.o $@ : ,g' < $@.$$$$ > $@; \
      $(RM) $@.$$$$

$(RUNRULE_DIR)/objects/maxfiles/slic_%.o: $(RUNRULE_DIR)/maxfiles/%.max
	@mkdir -p $(dir $@)
	"$(MAXCOMPILERDIR)/bin/sliccompile" $< $@

$(RUNRULE_DIR)/objects/maxfiles/maxgenfd_%.o: $(RUNRULE_DIR)/maxfiles/%.max
	@mkdir -p $(dir $@)
	"$(MAXGENFDDIR)/bin/maxgenfdmaxcompile" $< $@ $*

$(RUNRULE_DIR)/objects/c/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

$(RUNRULE_DIR)/objects/cpp/%.o: %.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CFLAGS) -c $< -o $@

$(RUNRULE_DIR)/binaries/$(TARGET_EXEC): $(OBJ)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

$(RUNRULE_DIR)/binaries/$(TARGET_LIBRARY): $(OBJ)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -shared -o $@ $^ $(LDFLAGS)

clean distclean startsim stopsim:
	$(MAKE) -C $(RUNRULE_DIR) $@

$(RUNRULE_DIR)/Makefile.settings:
	$(MAKE) -C $(RUNRULE_DIR) Makefile.settings

.PRECIOUS: $(MAXFILES) $(MAXFILES_INC) $(TARGET_EXEC) $(TARGET_SO)
.PHONY: run all build clean distclean startsim stopsim runsim help

-include $(C_OBJ:.o=.d) $(CPP_OBJ:.o=.d)

